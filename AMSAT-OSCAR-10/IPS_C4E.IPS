( IPS-C4, CDP 1802-METAFORM, NOTVERSION AO-10 29.6.86 )                       #0E02 $h !n                                       #0400 kon A/D                                                   #0468 kon UHR                                                   #046E kon SU0                                                   #0472 kon SU1                                                   #0476 kon SU2                                                   #047A kon SU3                                                   #04C4 kon KETTE                                                 #0458 kon T/Z                                                   0 kon 0    1 kon 1    2 kon 2    4 kon 4                                                                                        ( UMSTELLUNG DER EINTRAGSERZEUGER )                             'n 2BLITERAL 'n 1BLITERAL 'n BRONZ 'n JUMP 'n $JEEX  'n LOOPEX  'n +LOOPEX   'n RETEX  $ccodes 6 +n 8 !fk                                            ( ENDE DER UMSTELLUNG )                    ( DEFINITIONEN UNTEN ) #E82 $h !n                               :n >      - >0       ;n               :n <>   - =0 NICHT   ;n   :n =      - =0       ;n               :n >=   - <0 NICHT   ;n   :n <      - <0       ;n               :n <=   - >0 NICHT   ;n   :n RDO RDU RDU       ;n               :n PDUP ZWO ZWO      ;n   #F02 $h !n                                                      :n *    P* WEG       ;n               :n P/   P/MOD WEG    ;n   :n /MOD   0 VERT P/MOD ;n             :n /    /MOD WEG     ;n   :n INCR   DUP @ 1 + VERT ! ;n         :n MOD /MOD VERT WEG ;n   #04DE kon $PI ( LESEPOINTER DES COMPILERS )                     #04E0 kon $P1 ( SCHLEPPPOINTER DES COMPILERS )                  #04E2 kon $P2 ( MERKFLAGGE VON $NAME, OB ENDE WAR )             hier #2 +n $h !n                                                #04E4 kon $P3 ( HILFSPOINTER FUER $SUCH )                       #04E6 kon $H  ( POINTER ZUM SPEICHERSTAND )                     #01C0 kon SYSLINE                                               #04DC kon READYFLAG   #04DD kon DATA-IN                         #37F8 kon $SL     #3700 kon $ML     #0000 kon $LL               $ccodes       @n kon DEFEX                                      $ccodes 02 +n @n kon VAREX                                      $ccodes 04 +n @n kon CONSEX                                     #0000 kon $RBU  #1002 $h !n  #01FE kon $RBE  #500 kon $EBU      #0465 kon Z                                                     #74C3 kon SCHLUESSEL       ( ENDE TEIL A )                      ( IPS-C4, TEIL B: DER COMPILER )                                #0004 feld $ND                                                  #0001 var $RS                                                   #0000 var ECHO                                                  #0000 var $F1                                                   #0000 var $F2                                                   #0000 var $KK                                                   #0000 var BASIS                                                 #0000 var COMPILEFLAG               #1082 $h !n                 #0000 var $V1                                                   #0000 var LINK                                                  #0000 var CMD#                                                  16 feld   STACKMESSAGE                                          16 feld   MEMMESSAGE                                            16 feld   NAMEMESSAGE                                           16 feld   STRUCMESSAGE              hier #2 +n $h !n            16 feld   TEXTMESSAGE                                           16 feld   RSMESSAGE                                             10 feld   ACKNMESSAGE                                                                                                                                                                                                                                                                                                                                                                           ~ SPEICHER VOLL !  ~  'n MEMMESSAGE   02 +n $OC !t              ~ NAME FEHLT !     ~  'n NAMEMESSAGE  02 +n $OC !t              ~ STAPEL LEER !    ~  'n STACKMESSAGE 02 +n $OC !t              ~ STRUKTURFEHLER ! ~  'n STRUCMESSAGE 02 +n $OC !t              ~ TEXTFEHLER !     ~  'n TEXTMESSAGE  02 +n $OC !t              ~ UNZUL. NAME !    ~  'n RSMESSAGE    02 +n $OC !t              ~ ( IPS-C4 ) ~        'n ACKNMESSAGE  02 +n $OC !t                                                                               ( DEFINITIONEN )                                               :n HIER   $H @ ;n                                               :n H2INC  HIER 2 + $H ! ;n                                      :n $DEP   HIER ! H2INC ;n                                       :n $CEN  UE2 0 $RBU $PI !  1 ECHO !  0 READYFLAG !B ;n          :n IE   $P1 @ $PI @ 1 - je I @B #80 ODER I !B                                           nun  0 $P2 ! $CEN WEG ;n                :n SYSWRITE SYSLINE 16 >>> 0 IE ;n                              :n L>>> anfang DUP 256 > ja? 256 - S>R PDUP  UE2 0  256 >>>                                 256 + VERT 256 + VERT R>S                  dann/nochmal DUP >0 ja?   >>>                                                       nein: PWEG WEG                                                  dann ;n                              :n TRANSPORT   $EBU #200 L>>> ;n                                :n ETRANSMIT   #70 T/Z !B #FFFF $EBU #6FF                                      je I @B CYC2 nun #700 ! ;n                       code $SCODE #E ->X                                              BEGIN #E4 ( $P3 ) LD IM #A PLO #A LDA #F PLO #A LDA                   SKP hier   #1 +n $h !n    #F PHI                            'n $ND 02 +n dup msby LD IM #E PHI LD IM #E PLO ($ND -> RE)         #F LDA XOR MX #3F AND IM                                        D=0 Y? #E INC #F LDA XOR MX                                                    D=0 Y? #E INC #F LDA XOR MX                vert                               D=0 Y? #E INC #F LDA XOR MX  rdu                                           00 Y?             vert      TH #F INC vert TH #F INC vert TH #F INC TH             ( GEF? ) D=0 Y? #F INC #F INC PS DEC #F GLO PS STR                              PS DEC #F GHI PS STR 00 LD IM                                N: ( NICHT GEF. ) #E4 ( $P3 ) LD IM #A PLO                         #F LDA #C PLO #A STR #A INC #F LDA #A STR                       D=0 Y? #C GLO D=0 Y? PS DEC PS STR                                                   PS DEC PS STR                                                TH                                                TH                                                       TH                                                D=0 NOT Y? ( NICHT ZU ENDE ) vert                               01 EF END 7 DEC 7 DEC TH      NEXT                                                                                                                                                                                                                                                                                              :n $SUCH LINK @ $P3 ! $SCODE ;n                                                                                                 #1302 $h !n                                                                                                                                                                                                                                                                                                                     code $CSCAN  #DE ( $PI ) LD IM #E PLO #A GHI #E PHI #F ->X        #E LDA #F PLO #E LDA #F PHI #02 XOR IM D=0 NOT                Y? LD MX #20 XOR IM D=0 Y? 01 LD IM                                                     N: LD MX #28 XOR IM ( KLAMMER AUF ? )                              D=0 Y? 01 LD IM #8 PHI ( C-FLAG )                                   N: #8 GHI SHR ( C-FLAG )                                           DF Y? LD MX #29 XOR IM                                                D=0 Y? #8 PHI                                                       TH 01 LD IM                                              N: 02 LD IM                TH                      TH     TH    TH  #C PLO                 D=0 Y? #E2 ( $P2 ) LD IM #A PLO                                        01 LD IM #A STR #A INC SHR #A STR                            TH                                                          PS INC PS ->X #C GLO XOR MX                                                   D=0 Y?  #F INC #E DEC #F GHI #E STR                                            #E DEC #F GLO #E STR                                     PS DEC 7 DEC 7 DEC                                          N:  #C GLO PS STR 00 LD IM PS DEC PS STR                        TH  NEXT                                                                                                                                                                                                                                                                                                      :n $NAME   0   READYFLAG @B  ( $P2: HILFSFLAGGE ENDE )                 ja? 1 $CSCAN >0                                                    ja? $PI @  UE2 0  $P1 !                                             2 $CSCAN PWEG #CE57 #8D                                         $P1 @ $PI @ ZWO - DUP 63 > ja? WEG 63                                                      dann                                 DUP $ND !B 1 - ZWO +                                            je I @B $POLYNAME                                               nun $ND 3 + !B $ND 1 + ! 1                                  dann                                                         dann ;n                                                                                                                                                                                                                                                                                                                                                                                  :n $ZAHL 1 ( OK ) 0 ( ANF. ) $PI @ 1 - $P1 @  #2D ZWO              UE2 0  @B = ja?    1 +  -1 S>R ( NEG ) 10 ( BASIS )                         nein:        1 S>R ( POS )                                           #23 ZWO @B =                                                    ja?   1 +             16                                        nein: #42 ZWO @B =                                                    ja?    1 +       2                                              nein:           10                                   dann dann  dann   BASIS !                         VERT je BASIS @ * I @B DUP #3A < ja? #30 -                                                       dann  DUP #40 >                        RUMPELSTILZCHEN UE2 0    ja? #37 -                                                       dann                                   DUP BASIS @ >= ZWO <0 ODER ja? ( FEHLER ) WEG 0 RDU                                        dann +                            nun R>S * VERT ;n                                         :n COMPILER  $NAME                                              ja? $SUCH DUP =0                                                    ja? ( NUMBERPROCESSOR ) WEG $ZAHL                                   ja?  COMPILEFLAG @B                                               ja? DUP #FF00 UND =0 ja? 'n 1BLITERAL $DEP                                               HIER !B $H INCR                                              nein: 'n 2BLITERAL  UE2 0                                              $DEP $DEP                          dann                  dann                                    nein: IE                                                        dann                                                        nein: ( FOUNDPROCESSOR ) DUP 6 - @B #C0 UND                           COMPILEFLAG @B ODER DUP 1 =                                     ja?   WEG HIER $ML >= ja?   WEG MEMMESSAGE SYSWRITE                                   nein: $DEP                                                      dann                                      nein: DUP #80 = VERT #C1 = ODER                                       ja?    IE                                                       nein: R>S $V1 ! $TUE $V1 @ S>R                                  dann                                                      dann                                                      dann  $PSHOLEN $SL >                                            ja? $SL  UE2 0   $PSSETZEN STACKMESSAGE SYSWRITE                    WEG $F1                                                     dann                                                        dann READYFLAG @B $P2 @B UND                                         ja?  #20 $RBU !B  $RBU DUP 1 + 511 L>>>                              ACKNMESSAGE SYSLINE 10 >>> ( IPS-C4 ) $CEN                 dann                                                                                                                                                                                                                                                       ( SCHLUESSEL-PRUEFUNG ) DATA-IN @B                              ja? 0 DATA-IN !B SCHLUESSEL                                         $RBU $RBE 1 + je I @B CYC2                                                    nun                                               =0 ja?   1 READYFLAG !B  0 $P2 !  CMD# INCR  #2020 (    )          nein:  UE2 0  1 ECHO !                    #454B ( KE )          dann  $RBE !                                             dann ;n      ( ENDE, TEIL B )                                   ( IPS-C4, TEIL C UND D: HILFSROUTINEN )                         :n ENTRYSETUP $F1 $KK ! $NAME DUP                                      ja?   $SUCH =0 NICHT $RS @ UND                                        ja?   RSMESSAGE SYSWRITE WEG  0                                 nein: HIER DUP $KK ! LINK @ H2INC H2INC                               $DEP $ND ZWO 4 >>> LINK ! HIER VERT H2INC                 dann                                                      nein: NAMEMESSAGE SYSWRITE                                      dann ;n                                                                                                                  :n $GETADR $NAME  RUMPELSTILZCHEN UE2 0                                          ja?   $SUCH DUP =0 ja?   IE      0                                                 nein:         1                                                 dann                                        nein: NAMEMESSAGE SYSWRITE 0                                    dann ;n                                         :hpri  '     $GETADR ja? COMPILEFLAG @                                                  ja? 'n 2BLITERAL $DEP $DEP                                      dann                                                        dann ;n                                                                                                                                                                                                                                                                                                     :prior  ;     'n RETEX $DEP  0 COMPILEFLAG !B                            $F2 <>                                                          ja? STRUCMESSAGE SYSLINE #20 + 16 >>>                               LINK @ DUP $H ! 4 +  UE2 0  @ LINK !  0 IE                  dann ;n                                                                                                                :int  :   ENTRYSETUP ja? DEFEX VERT ! 1 COMPILEFLAG !B $F2                          dann ;n                                     :n PRIMODIFY   $KK @ @B ODER $KK @ !B ;n                                                                                        :int :PRIOR       :       #80 PRIMODIFY ;n                      :int :HPRI        :       #40 PRIMODIFY ;n                      :int :INT         :       #C0 PRIMODIFY ;n                      :prior JA?   UE2 0  'n BRONZ $DEP HIER H2INC ;n                 :prior DANN  HIER VERT ! ;n                                     :prior NEIN: 'n JUMP $DEP HIER H2INC VERT DANN ;n               :prior JE    'n $JEEX $DEP HIER H2INC ;n                        :prior NUN   'n LOOPEX  $DEP DUP DANN 2 + $DEP ;n               :prior +NUN  'n +LOOPEX $DEP DUP DANN 2 + $DEP ;n               hier #3 +n $h !n                                                :prior ANFANG HIER ;n                                           :prior ENDE? 'n BRONZ  $DEP $DEP ;n                             :prior DANN/NOCHMAL VERT 'n JUMP $DEP $DEP DANN ;n              :int KON        ENTRYSETUP ja? CONSEX VERT ! $DEP                                          dann ;n                              :int VAR        ENTRYSETUP ja? VAREX  VERT ! $DEP                                          dann ;n                              :int FELD       ENTRYSETUP ja? VAREX  VERT ! HIER + UE2 0 $H !                             dann ;n                              'n $EBU 02 +n $OC @n var SP                                     :n !CHAR   SP @ !B SP INCR ;n                                                                                                                                                                   :n TLITERAL I 1 + R>S @B PDUP + S>R SP @ PDUP + SP !                       VERT >>> ;n                                          :hpri " $PI INCR $PI @                                                  anfang $PI @ DUP @B #22 = VERT $RBE > ODER $PI INCR             ende?                                                           $PI  UE2 0  @ 2 - ZWO - DUP 1 < ZWO 256 > ODER                  ja?   TEXTMESSAGE  SYSWRITE VERT WEG                            nein: COMPILEFLAG @ ja? S>R I 'n TLITERAL $DEP HIER !B                                  $H INCR HIER I >>>                                              HIER R>S + $H !                                             dann                                        dann ;n                                                                                                                 :int !T VERT >>> ;n                                                                                ( ENDE TEIL C )              ( IPS-C4, TEIL D )                                              :n LEERZ S>R SP @ #20 ZWO !B DUP  UE2 0  1 + R>S 1 - L>>> ;n                                                                    :n !FK S>R I 2 * + 1 R>S je 2 - DUP S>R ! R>S                                           nun WEG ;n                                                                                                                                                                                                                              :n WAND BASIS @ 10 = ja?   DUP ( ZAHL ) <0                                                ja? CHS #2D ( - ) !CHAR                                         dann 10000 0 ( W.-ANFANG )                                nein: 16 BASIS ! #23 ( # ) !CHAR                                      #1000 1 ( W.-ANFANG )  UE2 0                              dann  S>R                                      anfang VERT ZWO /MOD VERT                                                I NICHT ja?  DUP >0 ja? R>S WEG 1 S>R                                   dann        dann                                              I ja?  DUP #30 + DUP #39 >                                                       ja? 7 +                                                         dann !CHAR                                       dann                                                            WEG VERT BASIS @ / DUP =0                      ende? PWEG R>S NICHT ja? #30 !CHAR                                                   dann ;n                                 :n ZEIG-STAPEL          SP @ S>R  $RBU SP ! #80 LEERZ  UE2 0      $PSHOLEN $SL ZWO - DUP 32 > ja? WEG 32                                                      dann   S>R I +                      anfang I >0                                                     ja?  DUP I - DUP  1 + @B VERT @B 256 * + R>S 2 - S>R                 $RBU I 4 * + SP ! WAND                                     dann/nochmal                                                    R>S  PWEG R>S SP ! ;n                                                                                                                                                                         :n $INSERT   VERT #7 UND 2 *  UE2 0  KETTE + ! ;n                                                                                                                                                                                                                                                                                                                                               :n $CHAINACT COMPILEFLAG @                                                  ja?   'n 2BLITERAL $DEP $DEP                                          'n $INSERT   $DEP                                         nein: ZWO #FFF8 UND ( MASKE FUER 0-7 )                                =0 ja?   $INSERT                                                   nein: IE                                                        dann                                                   dann ;n                                             :hpri AUSH  'n RUMPELSTILZCHEN $CHAINACT ;n                     :hpri EINH  $GETADR ja? $CHAINACT                                                   dann ;n                                     :int ?   $GETADR ja? 2 +                                                         dann ;n                                                                                                        hier #8 +n $h !n                                                                                                                :n SCHREIB   S>R SP @ I >>> SP @ R>S + SP ! ;n                                                                                  :int WEG/AB  $GETADR ja? DUP $LL <                                                       ja?   IE                                                        nein: 2 - DUP @ LINK ! 4 - $H !                                 dann                                                        dann ;n                                                                                                    'n RUMPELSTILZCHEN kon A-COMPOSER                                                                                               :n EB-HANDLER  T/Z @B =0     ( IN 0 EINGEH )                          ja? ECHO @B                                                         ja?   $P2 @  UE2 0  ja? ZEIG-STAPEL 0 $P2 !                                         dann                                              $RBU TRANSPORT ETRANSMIT DIN-ENABLE 0 ECHO !              nein: READYFLAG @ =0 ( WEDER DATA-IN NOCH READYFLAG )                 ja? A-COMPOSER $TUE                                             dann                                                      dann                                                        dann ;n                                                                                                                   hier 'n $LL 02 +n !O             ( ENDE IPS-C4 )                                                                                                                                                ( BAU DES SYSPAGE-RESTES )                                      'n COMPILER 'n EB-HANDLER 'n RUMPELSTILZCHEN dup dup dup dup    dup dup dup 'n JUMP #04C0    #04C0 $OC 12 !fk                   hier #04E6 !O                                                   $ccodes 22 +n @n 'n LINK #2 +n !O                                                                                               ( WEITERE VORBESETZUNGEN SYSPAGE )                              #74 #044B !O ( SS AUF NOMINAL 7, ES POS FLANKE )                #0A #0451 !O ( ES LOCKOUT = 10 COUNTS = 14 GRAD )               #05 #045B !O ( GB-CW GESCHW. 100 MS PUNKTLAENGE )                                                                                                                                                            ( ENDE METACOMPILATION )                           l/stop                                                                                                                                       ( hier