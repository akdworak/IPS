( ASSEMBLER CDP 1802 FUER IPS-C3, SATELLIT/FLIGHT )             :PRIOR I>      0 COMPILEFLAG !B ;                               :INT   <I      1 COMPILEFLAG !B ;           0 VAR $V2           : ERZ-ENDE     R>S $V2 @ ! ;                                    : ,            HIER !B $H INCR ;                                :PRIOR MACHT>  ' ERZ-ENDE $DEP #D5 , ;                          : ERZ>         ENTRYSETUP JA?   $V2 !                                                     NEIN: R>S WEG                                                   DANN ;                                :INT RCODE ENTRYSETUP JA? ! DANN ;                              :INT CODE  ENTRYSETUP JA? HIER VERT !                                                 DANN ;                                    16 FELD $JERROR " SPRUNGZ. N.A.P.! " $JERROR !T                 16 FELD $CERROR " VORBEF. UNZUL. ! " $CERROR !T                 : BDEP  ERZ> ,  MACHT> @B , ;                                   : $TERM WEG $CERROR SYSWRITE ;                                  : $INADR  PDUP EXO #FF00 UND                                           =0 JA?   !B                                                        NEIN: WEG $JERROR SYSWRITE                                      DANN ;                                                : $AD     ZWO #FFF0 UND =0 JA?   + ,                                                       NEIN: $TERM                                                     DANN ;                               : $ADO     ERZ> ,  MACHT> @B $AD ;                              : $ALUACT ZWO #FF00 UND #A500 =                                           JA?   VERT $AD                                                  NEIN: $TERM                                                     DANN ;                                                                                                                : MX   0 $ALUACT ;      : IM    8 $ALUACT , ;                                                                                                                                                   #00 $ADO LDN       #70 BDEP RET       #A574 KON ADC             #10 $ADO INC       #71 BDEP DIS       #A575 KON -DC             #20 $ADO DEC       #72 BDEP LDXA      #A577 KON DC-             #40 $ADO LDA       #73 BDEP STXD      #A5F0 KON LD              #50 $ADO STR       #76 BDEP ROR       #A5F1 KON OR              #60 $ADO I/O       #78 BDEP SAV       #A5F2 KON AND             #80 $ADO GLO       #79 BDEP MARK      #A5F3 KON XOR             #90 $ADO GHI       #7A BDEP 0>Q       #A5F4 KON ADD             #A0 $ADO PLO       #7B BDEP 1>Q       #A5F5 KON -D              #B0 $ADO PHI       #7E BDEP ROL       #A5F7 KON D-              #D0 $ADO ->P       #C4 BDEP NOP       #0002 KON RS              #E0 $ADO ->X       #C8 BDEP SKP2      #0000 KON NEVER                              #CC BDEP LSIE      #0009 KON Q=1             #00 BDEP IDL       #F6 BDEP SHR       #000A KON D=0             #38 BDEP SKP       #FE BDEP SHL       #000B KON DF              #60 BDEP INCX      #D6 BDEP NEXT      #000B KON PS              : NOT    8 EXO ;      : EF  11 + ;       : BEGIN   HIER ;       : Y?    #30 $AD HIER $H INCR ;   : TH    HIER VERT $INADR ;     : N:    0 Y? VERT TH ;           : END   Y? $INADR ;            : $SBRT ZWO 4 UND >0 JA? VERT ( PROVOZIERT FEHLER )                                  DANN $AD ;                                 : LEND      #C0 $SBRT DUP 256 / , , ;                           : LSKP      #C4 $SBRT ;                                                                 ( ENDE SATELLITEN-ASSEMBLER )                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ( P3-C 16-BIT DREHOPERATOREN, 16.4.83 UNVERAENDERT )                                                                            30 FELD T-LIST                                                  8192  4836   2555   1297   651   326   163   81   41   20  10     5      3      1      1                                        T-LIST 15 !FK                                                                                                                                                                                   CODE TR-LOOP PS ->X PS INC PS LDA #C PLO PS GLO #D PLO PS GHI    #D PHI #D INC #D INC #D INC #D INC #D LDA 0 Y? ( GO TO L1 )    CODE RP-LOOP PS ->X PS INC PS LDA #C PLO LD MX #80 XOR IM TH     ( L1 ) #80 AND IM D=0 NOT Y? 1 LD IM TH #C PHI                  PS LDA #E PHI PS LDA #E PLO PS LDA #F PHI LD MX #F PLO          PS DEC PS DEC PS DEC 1 LD IM #A PLO                             BEGIN ( SHIFT UND ADD ) #C GHI #D PHI #F GHI #80 AND IM D=0 NOT  Y? #D GHI 1 XOR IM #D PHI #F GHI #FF XOR IM #F PHI (1.VZA)         #F GLO #FF XOR IM #F PLO #F INC                              TH #C GLO 8 D- IM DF                                            Y? #D PLO #F GLO SHL #F GHI #F PLO                                 BEGIN #D GLO D=0 NOT                                                  Y? #D DEC #F GLO SHR #F PLO   VERT                        0 END TH #F PHI ( 0 )                                        N: #F8 XOR IM #D PLO                                               BEGIN #D GLO D=0 NOT                                                  Y? #D DEC #F GHI SHR #F PHI #F GLO ROR #F PLO  VERT       0 END TH  ( ENDE SHIFT 2 BYTES )                             TH DF Y? #F INC TH ( RUNDEN ) #D GHI SHR DF                     Y? #F GHI #FF XOR IM #F PHI #F GLO #FF XOR IM #F PLO #F INC     TH ( 2. VZA )                                                   #F GLO PS INC ADD MX STXD #F GHI ADC MX PS STR                  ( RF + @PS -> @PS )                                             #A GLO D=0 NOT                                                       Y? #E GLO #F PLO #E GHI #F PHI PS INC PS INC                       #C GHI 1 XOR IM #C PHI #A DEC    VERT                  0 END TH PS INC PS INC PS INC                                   LD MX #E PLO #C GLO PS STR ADD MX T-LIST ADD IM #F PLO          T-LIST 256 / LD IM #F PHI #E GLO PS STR                         #C GHI D=0                                                        Y? #F LDA ADD MX PS STR PS DEC #F LDA ADC MX                    N: #F LDA  -D MX PS STR PS DEC #F LDA  -DC MX                   TH                                                            STXD PS DEC PS DEC PS DEC PS DEC                                LD MX 1 ADD IM PS STR 15 D- IM DF NOT                           Y? PS DEC 7 DEC 7 DEC NEXT                                      TH PS INC NEXT                                                                                                                                                                                                                                                 : *F VERT DUP <0 JA?   CHS P* CHS                                                NEIN: P*                                                        DANN  VERT WEG ;                                                                                               39798 KON KORR                                                                                                                  10430 KON 1RAD     #4000 KON C/4                                                                                                : R>P  C/4 ZWO <0 JA?   CHS RDU CHS VERT                                          NEIN: RDU VERT CHS                                              DANN 0 RP-LOOP WEG KORR *F VERT ;             : T-R  C/4 ZWO <0 JA?   + RDU VERT CHS                                            NEIN: - RDU CHS VERT                                            DANN 0 TR-LOOP KORR *F RDU KORR *F RDU WEG ;  : /A/  DUP <0 JA? CHS DANN ;                                                                                                    : /N S>R DUP <0 JA?   CHS 1RAD P* R>S P/ CHS                                    NEIN: 1RAD P* R>S P/                                            DANN ;                                          ( ENDE EBENE TRIGONOMETRIE )                                                                                                                                                                                                                                                                                                    ( PHASE 3, SPHAERISCHE TRIGONOMETRIE 15.8.79 )                  : 3P>R ( R,L,B -> X,Y,Z )                                         VERT RDU 0 VERT T-R RDU 0 RDO T-R RDO ;                       : 3R>P ( X,Y,Z -> R,L,B )                                         RDU R>P RDU VERT R>P RDO VERT ;                               : PROJECTION ( LP,BP,LN,BN -> C/4*COS{ PR }, L,B )                C/4 - S>R C/4 + RDO ZWO - RDO C/4 RDU 3P>R I T-R WEG 0          R>S CHS T-R 3R>P S>R RDO + R>S ;                              : A.B ( LA,BA, LB,BB -> C/4.COS )                                 S>R S>R VERT R>S - VERT C/4 RDU 3P>R RDO VERT C/4 R>S -         T-R RDU PWEG ;                                                : AXB ( LA,BA,LB,BB -> C/4.SIN,LC,BC )                           C/4 - ZWO S>R S>R RDO VERT - VERT C/4 RDU 3P>R RDO VERT I CHS   T-R WEG CHS VERT 0 R>S T-R RDU VERT RDO 3R>P VERT R>S + VERT ; : SK2 ( HYP, KATH.1 -> KATH.2 )                                   1RAD 0 RDO T-R WEG VERT 1RAD 0 RDO T-R WEG ( COS.K COS.H )      DUP <0 DUP JA? VERT CHS VERT DANN S>R VERT                      DUP <0 DUP JA? VERT CHS VERT DANN R>S + S>R                     /N /A/ DUP 1RAD > JA? WEG 1RAD DANN #2000                        ANFANG 1RAD ZWO 0 VERT T-R S>R S>R ZWO R>S - R>S VERT S>R              DUP <0 JA?   CHS 8 + I VERT /N CHS                                     NEIN:     8 + I VERT /N                                         DANN - R>S /A/ 9 <                                ENDE? VERT WEG R>S JA? #8000 VERT - DANN ;                   CODE 3V3 PS GLO #F PLO 12 ADD IM #E PLO PS GHI #F PHI              DF Y? 1 ADD IM TH #E PHI 18 LD IM #C PLO #E ->X                 BEGIN #E DEC LD MX #F DEC #F STR #C DEC #C GLO 12 XOR IM          D=0 Y? #F GLO 18 ADD IM #F PLO DF Y? #F GHI 1 ADD IM #F PHI         TH                            TH #C GLO                   D=0 END NEXT                                                 : -R3 0 2 JE S>R RDO R>S - RDU NUN ;                            : +R3 0 2 JE S>R RDO R>S + RDU NUN ;                            : -P3 3P>R 3V3 3P>R 3V3 -R3 3R>P ;                              : +P3 3P>R 3V3 3P>R 3V3 +R3 3R>P ;                                                                                              CODE @3 PS LDA #C PHI PS LDA #C PLO 6 LD IM #D PLO                   BEGIN #C LDA PS DEC PS STR #D DEC #D GLO D=0 END NEXT                                                                      : @L3     2 + @ ;                                               : @B3     4 + @ ;                                               : @LB3    DUP @L3 VERT @B3 ;                                                                                                    CODE !3 PS LDA #D PLO PS LDA 5 ADD IM #C PLO DF Y? #D INC TH         #D GLO #C PHI 6 LD IM #D PLO                                    BEGIN PS LDA #C STR #C DEC #D DEC #D GLO                        D=0 END NEXT ( ENDE SPHAERISCHE TRIGONOMETRIE )                                                                                                                                            ( P3-C NAVIGATION UND ZEITBESTIMMUNG, 24.3.88 )                 16491 KON B/F                                                    7623 KON ES                                                    24163 KON A/F                                                     -33 KON KO                                                       65 KON KW                                                    18273 KON JZ0  ( 18257 + 16 RAUSCHOFFSET VON TW-ROUTINE )       18000 KON TOR  ( ERSTER SCHAETZWERT, AO-10 - 20% )              #0460 KON MAGNET                                                7385 7466 #04A4 2 !FK  ( U = 637,157 MIN )                          0 VAR BETA                                                  27621 VAR RECTAS ( LONGITUDE OF ASCENDING NODE - RECTASCENSION ) 1820 VAR INCL   ( INCLINATION         )                        32431 VAR PERIGA ( ARGUMENT OF PERIGEE )                            0 VAR TAU    ( POSITION OF S/C IN ORBIT )                       0 VAR L0                                                        0 VAR MSW                                                       0 VAR TR-P                                                      0 VAR Z-ALT                                                     0 VAR RADIUS                                                    1 VAR Z-MARKE                                                                                                                                                                                                                                               6 FELD SV    ( SPIN-VECTOR, "R": 1 U/MIN = 256 UNITS )          6 FELD T-AUX                                                    6 FELD SONNE                                                    6 FELD H                                                        6 FELD SSV    ( SOLL-SPIN-VEKTOR )                                                                                                                                                                                                                              : Z>R,T  DUP                                                      ANFANG DUP DUP ES 0 RDO T-R VERT S>R - ( PHI-0 )                  RDO VERT ZWO VERT - ( D-PHI ) 1RAD R>S - /N S>R                 VERT I + R>S /A/ 12 <                                         ENDE? VERT WEG ( E AUF STACK )                                1RAD 0 RDO T-R B/F *F VERT ES - A/F *F VERT R>P ;                                                                                                                                               : KT:BAHN>SVR ( L,B -> L,B )                                      VERT SV @L3 - C/4 - VERT C/4 RDU 3P>R SV @B3 C/4 - T-R          3R>P RDO WEG ;                                                                                                                : KT:AEQ>BAHN ( L,B -> L,B )                                      VERT RECTAS @ - C/4 RDU VERT 3P>R INCL @ CHS T-R 3R>P VERT      PERIGA @ - VERT RDO WEG ;                                                                                                     : KT:BAHN>AEQ ( L,B -> L,B )                                      VERT PERIGA @ + VERT C/4 RDU 3P>R INCL @ T-R 3R>P VERT          RECTAS @ + VERT RDO WEG ;                                                                                                     : H-LOCAL ( PL,PB,RADIUS,TAU -> ABS{H},HL,HB )                    VERT S>R S>R VERT I - VERT C/4 RDU 3P>R R>P S>R ( GAMMA )       CHS #8000 *F 0 R>S T-R 3R>P VERT R>S + VERT ( L UND B )         RDO 1904 P* I P/ 1000 P* I P/ 200 P* R>S P/ RDU ;                                                                             ( RADIUS: 1000 UNITS/EARTH RADIUS                                 ABS{H}: 1 UNIT = 10-4 G )                                                                                                     : S-LOC ( MSW -> LS,BS )                                          DUP 349 ( 2E ) 0 RDO 18679 ( POSITION OF EARTH PERIGEE )        - T-R VERT WEG - ( TAU-E ) C/4 VERT 0 3P>R 4267 ( 23.44 DEG )   T-R 3R>P RDO WEG ;                                                                                                            : M-LOC  ( L0 -> LM,BM )                                          #C71C + 14290 ;                                                                                                               : TIME-REFERENCES  ( DELIVERS MSW, L0 ) UHR T-AUX 6 >>>           0 1 3 JE T-AUX I + @B NUN 1800 * VERT 30 * + VERT 2 / +         43200 P/ ( TW ) DUP T-AUX 4 + @ 12053 P/ 33 * JZ0 +             ( TW, JW ) DUP #8000 + RDU + ( MSW, L0 ) ;                                                                                    : ORTSDATEN Z @B 256 * Z>R,T TAU ! RADIUS ! TIME-REFERENCES       L0 ! DUP MSW ! S-LOC KT:AEQ>BAHN C/4 RDU SONNE !3               L0 @ M-LOC KT:AEQ>BAHN RADIUS @ TAU @ H-LOCAL H !3 ;                                                                                                                                                                                                                                                                          : SPIN-DIR  ( -> LSP, BSP )                                      C/4 SONNE @L3 TR-P @ - C/4 - SONNE @B3 ( C/4,L,B )               3P>R CHS VERT ( DREH UM 90 DEG LINKS ) 3R>P                     C/4 BETA @ - VERT SK2 - 0 3P>R VERT CHS ( 90 DEG NACH RECHTS )  3R>P VERT C/4 + TR-P @ + VERT RDO WEG ;                                                                                                                                                                                                                       : A-CONTROL                                                       SSV @3 SV @3 -P3 RDO WEG ( DELTASPIN AUF STACK ) H @LB3 AXB     RDO WEG SV @LB3 PROJECTION CHS VERT #8000 + VERT RDO WEG (MB)   PDUP KT:BAHN>SVR WEG ( B=0 ) SONNE @LB3 KT:BAHN>SVR WEG -       256 / MAGNET 1 + !B                                             H @LB3 AXB 3P>R 0 2 JE TOR *F H @ *F RDU NUN                    SV @3 3P>R +R3 3R>P SV !3 ; ( NEUER SPINVEKTOR UNGEFAEHR )                                                                    : NAVIGATION   Z-ALT @B Z @B <> DUP Z-MARKE !                     JA? Z @B DUP Z-ALT !B =0                                            JA? ( STOERUNGEN ANBRINGEN ) RECTAS @ KO + RECTAS !                 PERIGA @ KW + PERIGA !                                      DANN ORTSDATEN MAGNET @B ( AN ? )                               JA? A-CONTROL                                                   DANN                                                        DANN ;            ( ENDE ZEIT & NAV )                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ( OPERATIONS SOFTWARE P3-C, PRELAUNCH )                         ( BCR )                                                         0   VAR E-FLAGS ( B0 = LOW POWER, B1 = EXTREM. LOW POWER,               B2 = CMD-LOSS, B3 = HI-TEMP, B4 = /SA/ > 50 DEG )       170 KON LOW     ( 12 VOLT )                                     156 KON ELOW    ( 11 VOLT )                                     76  KON UBS     ( BATTERY SET LEVEL FOR 13.82 V @ 25 C )        130 KON UPS     ( S-ARRAY SET LEVEL FOR 30.68 V @ 25 C )                                                                        ( CMD-ASSIST & UEBERWACHEN )                                    CMD#  @ VAR CMD#-ALT                                            Z 1 + @ VAR O#-LC                                               0    VAR M-EIN                                                  0    VAR MZEITGRENZE                                            #45E KON TRANSPONDER                                            #47C KON SE-COUNT ( DO NOT USE SU3 )                            3    KON WARTE-ORBITS                                           209  KON T-LIMIT ( 45 C )                                       70   KON TOP-LIMIT                                              70   KON BOT-LIMIT                                              16  FELD CMD-ASSIST-VEKTOR                                      16  FELD TR-VEKTOR                                                                                                                                                                              ( BEACONS )                                                     0     VAR EB-FLAG                                               0     VAR EB-COUNT                                              0     VAR SEGMENT                                               0     VAR MIN-ALT                                               1     VAR PSK-AKTIV ( 1: PSK, 0: WAIT FOR T/Z, >1: GB-ACTIVE )  #4000 VAR LA-PTR                                                #4000 VAR LE-PTR                                                #047E KON EVENT                                                 #43FF KON $LBUE                                                 #0400 KON LLAENGE                                                                                                               #4400 KON $KBU                                                  #4600 KON $LBU                                                  #4800 KON $MBU                                                  #4A00 KON $NBU                                                  ( TRANSPONDER )                                                 1    VAR UL-ST-ON                                               0    VAR L-TAGE                                                                                                                                                                                                                                                                                                                                                                                 : BCR-SERVICE   Z-MARKE @                                          JA? UBS #416 @B (T-B1) #41A @B (T-B2) + 39 * 100 / -                UPS #422 @B (T-P1) #426 @B (T-P3) #42A @B (T-P5) + +            7 * 25 / - 1 E-FLAGS TBIT JA? PWEG 203 245 (13.9 / 28 V)                                  DANN                                  4 !2M 5 !2M                                                 DANN ;                                                                                                                       : BCR-FAULT  #400 @B (U-IN) 150 > #41B @B (I-IN) 60 > ODER               #40C #446 @B JA? WEG #410 ( OSCIL.2 )                                        DANN @B 10 < UND ;                                                                                        : BCR-TEST  BCR-FAULT JA? 0 3000 JE NUN BCR-FAULT                                         JA? #446 @B 1 EXO 6 !2M                                         DANN                                                        DANN ;                                    : COMM-MODUS ( POWERLESS ANTENNA AND L/U SWITCHOVER, EXPECTS      DESIRED 2MUX1 STATE ON STACK )                                  TRANSPONDER @B #81 TRANSPONDER !B MAGNET @B                     3 MAGNET !B 0 1000 JE NUN ( .4 SEC ) RDO 1 !2M 0 500 JE NUN     ( .2 SEC ) MAGNET !B TRANSPONDER !B ;                                                                                                                                                                                                                         : SS>BETA  #100 /MOD - #100 *                                              #8000 *F 8000 0 RDO T-R DUP + R>P VERT WEG                      C/4 0 RDO T-R 0 10923 (60 GRAD) T-R 3R>P RDU PWEG ;  : SENSOREN Z-MARKE @                                                 JA? #447 @ SS>BETA BETA !                                           #44D #44F JE I 6 + @B JA? 0 I 6 + !B Z @ I ! DANN                       2 +NUN  ( ZEITMARKIERUNG LETZTE ES-AKTIVITAET )     DANN ;                                                     ( WRITE UTILITIES )                                             : GPOS  $GBU + SP ! ;                                           : EPOS  $EBU + SP ! ;                                           : W99   10 BASIS ! DUP 10 < JA? " 0 " DANN WAND ;               : D-WAND DUP 0 < JA? CHS " - " DANN 10 /MOD VERT WAND                   " . " WAND ;                                            : ZEIGZEIT UHR 1 + T-AUX 4 >>>                                       0 1 JE T-AUX 2 + I - @B W99 " : " NUN T-AUX @B W99 ;       : RTTY-START   #459 !  TRANSPONDER @B #C0 UND TRANSPONDER !B                   #81 #45D !B ;                                    : CW-START     #459 !  TRANSPONDER @B #C0 UND 1 ODER                           TRANSPONDER !B 1 #45D !B ;                       : CR/LF        #3C !CHAR  #3E !CHAR ;                           : LUPDATE DUP @ 128 + DUP $LBUE > JA? LLAENGE -                                                   DANN VERT ! ;                 : LOG     EVENT INCR #400 LE-PTR @ 128 >>> LE-PTR LUPDATE ;     ( EB-BLOCKGENERATOREN )                                         : EB-VORSPANN                                                       0 EPOS 512 LEERZ  " Q  HI, THIS IS AMSAT OSCAR 13 "             48 EPOS ZEIGZEIT 58 EPOS #46C @ WAND 16 BASIS ! #40 EPOS        CMD# @ #45E @B E-FLAGS @ 256 * #456 @B +                        0 2  JE WAND "     " NUN   10 BASIS !                           0 6  JE I #440 + @B I DUP + DUP + #80 + EPOS WAND                    NUN ;                                                  : YBLOCK   EB-VORSPANN  0 EPOS " Y "                               0 63 JE I #400 + @B I DUP + DUP + #100 + EPOS WAND                   NUN ;                                                   : QBLOCK   EB-VORSPANN                                             #400 $EBU #180 + #80 >>> LA-PTR @ $EBU #100 + #80 >>>           LA-PTR LUPDATE ;                                             : TRANSFER    $EBU 512 L>>> ;                                                                                                   : ZBLOCK   EB-VORSPANN  0 EPOS " Z "                               0 192 JE I 40 + EPOS CR/LF I 62 + EPOS CR/LF                       64 +NUN ( CR/LF'S IM VORSPANN )                              0 ANFANG DUP 10 MOD =0 JA? CR/LF DANN                                    DUP 30 =      JA? CR/LF DANN  DUP 60 <                   JA? SP @ 4 + ZWO DUP  3 = JA? WEG 62 DANN                                        DUP 55 = JA? WEG 61 DANN                                        DUP 59 = JA? WEG 60 DANN                           #400 + @B WAND SP ! 1 +                                     DANN/NOCHMAL WEG 511 EPOS 0 !CHAR ;                                                                                        : RYBLOCK  $EBU DUP 126 + JE #5952 I ! 2 +NUN                              0 128 JE I EPOS CR/LF 32 +NUN                                   130 EPOS 0 !CHAR ;                                                                                                                                                                   ( GENERAL BEACON )                                              : GBLOCK  RUMPELSTILZCHEN ;                                                                                                                                                                                                                                                                                                                                                                                                                                     : BLOCKGENERATOR #45D @B NICHT (GB NOT ON)                       JA? TRANSPONDER @B #40 UND >0                                       JA?   1 PSK-AKTIV !                                             NEIN: PSK-AKTIV @                                                     DUP =0   JA? T/Z @B =0 JA? WEG 4 SEGMENT @ 7 #462                                          TBIT ODER (L) JA? WEG 16                                                      DANN                                          DANN                                              DANN                                                   DUP 16 = JA? RYBLOCK $EBU RTTY-START DANN                       DUP 14 = ZWO 10 = ODER                                                   JA? ZBLOCK  $EBU RTTY-START DANN                       DUP 12 = JA? GBLOCK  $GBU RTTY-START DANN                       DUP 8 =  JA? $GBU #100 +  RTTY-START DANN                       DUP 6 =  ZWO 2 = ODER      JA? WEG 3 DANN                       DUP 4 =  JA? $GBU 1 SEGMENT TBIT                                             JA?   #100 +                                                    NEIN: GBLOCK                                                    DANN  CW-START                                              DANN DUP >0 JA? 2 - DANN PSK-AKTIV !             DANN                                                        DANN ;                                                                                                                                                                                         : BAKEN-ST  UHR 2 + @B MIN-ALT @ <>                               JA? UHR 2 + @B DUP MIN-ALT ! 15 /MOD =0                             JA? 0 PSK-AKTIV ! SEGMENT ! 0                                   DANN WEG                                                    DANN                                                            4 #456 TBIT (LOCK) PSK-AKTIV @ NICHT UND (PRIOR-EB-BLOCK)       JA?  0 #45D !B  1 PSK-AKTIV !                                   DANN PSK-AKTIV @                                                JA? 1 TRANSPONDER @B #C0 UND #40 <>                              JA? WEG UHR 2 + @B 15 MOD 10 <                                      JA?   0 EB-FLAG ! #20                                           NEIN: EB-FLAG @ E-FLAGS @ #0A UND =0 UND                              JA?   #09                                                       NEIN: 4 #456 TBIT (LOCK)                                              JA?   #10 SEGMENT @ NICHT JA? 1 EB-FLAG !                                                 DANN                                  NEIN: #20                                                       DANN                                                     DANN                                                       DANN                                                        DANN TRANSPONDER @B #C6 UND ODER TRANSPONDER !B                NEIN: BLOCKGENERATOR                                            DANN ;                                                                                                                        : UEBERWACHEN   Z-MARKE @                                          JA? 1 E-FLAGS TBIT NICHT                                           JA? BCR-TEST #404 @B (U-BAT) DUP LOW < E-FLAGS @B EXO                      JA? E-FLAGS @B 1 EXO E-FLAGS !B LOG                             DANN                                                     ELOW < JA? 0 E-FLAGS CBIT 1 E-FLAGS SBIT LOG                           DANN                                                 DANN ( COMMAND-ASSIST ) CMD#-ALT @ CMD# @ <>                    JA? CMD# @ CMD#-ALT ! Z 1 + @ ( O# ) O#-LC !                    DANN Z 1 + @ O#-LC @ - WARTE-ORBITS > 2 E-FLAGS TBIT            NICHT UND JA? CMD-ASSIST-VEKTOR TR-VEKTOR 16 >>>                              #7F L-TAGE !B 2 E-FLAGS SBIT                                DANN                                                  #406 @B T-LIMIT > (T-TX-U) #40E @B T-LIMIT > (BCR) ODER         #425 @B T-LIMIT > (T-TX-L) ODER 3 E-FLAGS TBIT NICHT UND        JA? LOG 3 E-FLAGS SBIT                                          DANN                                                            4 E-FLAGS TBIT NICHT                                            JA? #414 @B TOP-LIMIT > #418 @B BOT-LIMIT > ODER                    JA? LOG 4 E-FLAGS SBIT                                          DANN                                                        DANN                                                         DANN ;                                                                                                                       : UL-ST  Z-MARKE @ UL-ST-ON @ UND                                  JA? 0 14 JE TR-VEKTOR I + DUP @ =0 NICHT VERT @B Z @B = UND                 JA? TR-VEKTOR I + 1 + @B DUP #20 UND =0 UHR 4 +                     @ 7 MOD L-TAGE TBIT ODER                                        JA? DUP #C0 UND TRANSPONDER @B #3F UND ODER                         TRANSPONDER !B (PASSB. CTRL)   DUP                              #0F UND DUP #441 @B <> JA? DUP COMM-MODUS                                              DANN WEG                                 #30 UND DUP #10 > JA? #A0 EXO                                                     DANN                                          #462 @B #6F UND ODER #462 !B   0                            DANN WEG                                                    DANN                                                       2 +NUN  E-FLAGS @ DUP JA? 6 TRANSPONDER SBIT DANN                          #0A UND >0 JA? 7 TRANSPONDER SBIT DANN        DANN ;                                                                                                                       : TRQ-ST Z-MARKE @                                                  JA? E-FLAGS @ #14 UND >0  Z @ MZEITGRENZE @ = ODER                  JA? 0 M-EIN !                                                   DANN Z @B 32 + #FF UND 64 < M-EIN @ UND 1 UND MAGNET !B     DANN ;                                                                                                                                                                                      : TLM-TN   PSK-AKTIV @                                              JA?  EB-COUNT @ DUP 1 + 10 MOD EB-COUNT !                            DUP JA?   QBLOCK                                                    NEIN: DUP =0 JA? YBLOCK                                                      NEIN: DUP 2 = JA? $KBU DANN                                           DUP 4 = JA? $LBU DANN                                           DUP 6 = JA? $MBU DANN                                           DUP 8 = JA? $NBU DANN TRANSFER                            DANN                                               DANN ETRANSMIT WEG                                     DANN ;                                                      : MEL-ST #456 @B SE-COUNT @B EXO #E0 UND >0 Z-MARKE @ UND            JA? #456 @B SE-COUNT !B LOG                                     DANN ;                                                                                                                     : NAV-ST  NAVIGATION SENSOREN TRQ-ST ;                          ( UTILITIES )                                                   : TEXT-FUELL $RBU VERT 512 L>>> 1 $P2 !B ;                      : K  $KBU TEXT-FUELL ;                                          : L  $LBU TEXT-FUELL ;                                          : M  $MBU TEXT-FUELL ;                                          : N  $NBU TEXT-FUELL ;                                          : UL-INST  7 UND DUP + TR-VEKTOR + S>R 256 * + R>S ! ;          : TORQUE  MZEITGRENZE ! SSV !3 SV !3 1 M-EIN ! ;                : TORQUE-OFF  0 M-EIN ! ;                                       : GB-FUELL VERT S>R $GBU + VERT ZWO I >>> R>S + 0 VERT !B ;     : GBTEXT1   0 GB-FUELL ;                                        : GBTEXT2 256 GB-FUELL ;                                                                                                        #0000 #0000 #0000 #0000 #0000 #0000 #0000 #0000 TR-VEKTOR 8 !FK #8200 #8020 #A040 #8260 #A280 #81A0 #A3C0 #A1E0                                                       CMD-ASSIST-VEKTOR 8 !FK                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ( SEQUENCER NACH TRENNUNG )                                                                                                     : INS-LICHT   SU1 @B JA? 4 EINH UEBERWACHEN                                          DANN ;                                                                                                                                                                                                                                                                                                     ( ERSTE EREIGNISSE )                                            27621 KON INITREC                                               30    VAR SEQ                                                   6     FELD INITZ    350 25 0  INITZ 3 !FK                                                                                       : SEQUENCER Z @B SEQ @B >                                           JA? SEQ @B DUP 30 = JA?   59                                                        NEIN: DUP 59 = JA?   1 EINH BAKEN-ST 84                                        NEIN: DUP 84 =                                                        JA? 108                                                         NEIN: 0 6 AUSH                             DANN           DANN  DANN SEQ ! WEG LOG     DANN ;                                                                                                                                                                                                                                                      : GETRENNT? #42C @B 100 > ( U-14V ST > 6.0 V )                      JA? (TRENNUNG) TIME-REFERENCES VERT WEG INITREC + RECTAS !          INITZ #463 5 >>> ( Z, ORBIT# ) 30 SEQ !                         -1 EVENT ! 0 CMD# ! 0 CMD#-ALT ! LOG 1 SU1 2 + ! 0 SU1 !        2 EINH NAV-ST     3 EINH MEL-ST   4 EINH INS-LICHT              6 EINH SEQUENCER                                                ' TLM-TN ' A-COMPOSER 2 + !                                 DANN ;                                                      ( PRESETS ) 0 6 !2M ( BCR-1, MAIN BAT )                         #40 0 !2M   ( ERDSENSOR 1/4 )    0 1 !2M ( 2 LO 70 HI TO U )    #58 #44B !B ( SS 1/3, ES NEG )   43 #451 !B ( ESLOCK 60 GRAD )  0 2 !2M     ( MOTOR-P. AUS   )   5 #45B !B  ( CW = 55 BPM )     #81 #45E !B ( TRANSPONDER AUS )  0 M-EIN ! 0 MAGNET !B          ' TLM-TN ? A-COMPOSER ! 0 EINH BCR-SERVICE  6 EINH GETRENNT?    7385 7466 #04A4 2 !FK (ORBIT-UHR 637.157 MIN)                   #01 #462 !B  ( L, S & J AUS )                                   #A3    3 !2M ( RUDAK AUS )                                      1257 (5 RPM)   C/4 CHS -3723  SV !3  5120 C/4 CHS -8000 SSV !3                                                                  ( !!!! ANSCHLIESSEND UHR SETZEN !!!! )                                                                                          ( TEXTE LADEN ! )                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               